<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianqian.user.mapper.RecieveAddressMapper">
  <resultMap id="BaseResultMap" type="com.qianqian.user.model.RecieveAddress">
    <id column="recieve_address_id" jdbcType="BIGINT" property="recieveAddressId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="province" jdbcType="TINYINT" property="province" />
    <result column="city" jdbcType="SMALLINT" property="city" />
    <result column="district" jdbcType="INTEGER" property="district" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="recieve_name" jdbcType="VARCHAR" property="recieveName" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="recieve_mobilephone" jdbcType="VARCHAR" property="recieveMobilephone" />
    <result column="recieve_telephone" jdbcType="VARCHAR" property="recieveTelephone" />
    <result column="is_default_address" jdbcType="TINYINT" property="isDefaultAddress" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="district_name" jdbcType="VARCHAR" property="districtName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    recieve_address_id, user_id, province, city, district, address, recieve_name, zip_code, 
    recieve_mobilephone, recieve_telephone, is_default_address, delete_flag, create_time, 
    modify_time, province_name, city_name, district_name
  </sql>
  <select id="selectByExample" parameterType="com.qianqian.user.model.RecieveAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mem_recieve_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mem_recieve_address
    where recieve_address_id = #{recieveAddressId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mem_recieve_address
    where recieve_address_id = #{recieveAddressId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianqian.user.model.RecieveAddressExample">
    delete from mem_recieve_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianqian.user.model.RecieveAddress">
    insert into mem_recieve_address (recieve_address_id, user_id, province, 
      city, district, address, 
      recieve_name, zip_code, recieve_mobilephone, 
      recieve_telephone, is_default_address, delete_flag, 
      create_time, modify_time, province_name, 
      city_name, district_name)
    values (uuid_short(), #{userId,jdbcType=BIGINT}, #{province,jdbcType=TINYINT}, 
      #{city,jdbcType=SMALLINT}, #{district,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{recieveName,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, #{recieveMobilephone,jdbcType=VARCHAR}, 
      #{recieveTelephone,jdbcType=VARCHAR}, #{isDefaultAddress,jdbcType=TINYINT}, #{deleteFlag,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{provinceName,jdbcType=VARCHAR}, 
      #{cityName,jdbcType=VARCHAR}, #{districtName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qianqian.user.model.RecieveAddress">
    insert into mem_recieve_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recieveAddressId != null">
        recieve_address_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="recieveName != null">
        recieve_name,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="recieveMobilephone != null">
        recieve_mobilephone,
      </if>
      <if test="recieveTelephone != null">
        recieve_telephone,
      </if>
      <if test="isDefaultAddress != null">
        is_default_address,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="provinceName != null">
        province_name,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="districtName != null">
        district_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recieveAddressId != null">
        #{recieveAddressId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=SMALLINT},
      </if>
      <if test="district != null">
        #{district,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="recieveName != null">
        #{recieveName,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="recieveMobilephone != null">
        #{recieveMobilephone,jdbcType=VARCHAR},
      </if>
      <if test="recieveTelephone != null">
        #{recieveTelephone,jdbcType=VARCHAR},
      </if>
      <if test="isDefaultAddress != null">
        #{isDefaultAddress,jdbcType=TINYINT},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="provinceName != null">
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="districtName != null">
        #{districtName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianqian.user.model.RecieveAddressExample" resultType="java.lang.Integer">
    select count(*) from mem_recieve_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mem_recieve_address
    <set>
      <if test="record.recieveAddressId != null">
        recieve_address_id = #{record.recieveAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=TINYINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=SMALLINT},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveName != null">
        recieve_name = #{record.recieveName,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveMobilephone != null">
        recieve_mobilephone = #{record.recieveMobilephone,jdbcType=VARCHAR},
      </if>
      <if test="record.recieveTelephone != null">
        recieve_telephone = #{record.recieveTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefaultAddress != null">
        is_default_address = #{record.isDefaultAddress,jdbcType=TINYINT},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.provinceName != null">
        province_name = #{record.provinceName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.districtName != null">
        district_name = #{record.districtName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateDefAddr" parameterType="java.util.HashMap">
  	update mem_recieve_address set is_default_address = #{defAddr} where user_id = #{userId} 
  	<if test="id != null">
  		and recieve_address_id != #{id}
  	</if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mem_recieve_address
    set recieve_address_id = #{record.recieveAddressId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      province = #{record.province,jdbcType=TINYINT},
      city = #{record.city,jdbcType=SMALLINT},
      district = #{record.district,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      recieve_name = #{record.recieveName,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      recieve_mobilephone = #{record.recieveMobilephone,jdbcType=VARCHAR},
      recieve_telephone = #{record.recieveTelephone,jdbcType=VARCHAR},
      is_default_address = #{record.isDefaultAddress,jdbcType=TINYINT},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      province_name = #{record.provinceName,jdbcType=VARCHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      district_name = #{record.districtName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianqian.user.model.RecieveAddress">
    update mem_recieve_address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=TINYINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=SMALLINT},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="recieveName != null">
        recieve_name = #{recieveName,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="recieveMobilephone != null">
        recieve_mobilephone = #{recieveMobilephone,jdbcType=VARCHAR},
      </if>
      <if test="recieveTelephone != null">
        recieve_telephone = #{recieveTelephone,jdbcType=VARCHAR},
      </if>
      <if test="isDefaultAddress != null">
        is_default_address = #{isDefaultAddress,jdbcType=TINYINT},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="provinceName != null">
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="districtName != null">
        district_name = #{districtName,jdbcType=VARCHAR},
      </if>
    </set>
    where recieve_address_id = #{recieveAddressId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianqian.user.model.RecieveAddress">
    update mem_recieve_address
    set user_id = #{userId,jdbcType=BIGINT},
      province = #{province,jdbcType=TINYINT},
      city = #{city,jdbcType=SMALLINT},
      district = #{district,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      recieve_name = #{recieveName,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      recieve_mobilephone = #{recieveMobilephone,jdbcType=VARCHAR},
      recieve_telephone = #{recieveTelephone,jdbcType=VARCHAR},
      is_default_address = #{isDefaultAddress,jdbcType=TINYINT},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      district_name = #{districtName,jdbcType=VARCHAR}
    where recieve_address_id = #{recieveAddressId,jdbcType=BIGINT}
  </update>
 </mapper>